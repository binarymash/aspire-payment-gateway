using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.OpenApi.Models;
using Swashbuckle.AspNetCore.SwaggerGen;

namespace AspirePaymentGateway.ServiceDefaults
{
    public class Rfc9457SchemaFilter : ISchemaFilter
    {
        public void Apply(OpenApiSchema schema, SchemaFilterContext context)
        {
            if (context.Type == typeof(ProblemDetails))
            {
                schema.Type = "object";
                schema.Description = "An RFC-9457 problem details object.";
                schema.Properties = new Dictionary<string, OpenApiSchema>
                {
                    ["type"] = new OpenApiSchema
                    { 
                        Type = "string", 
                        Description = "A URI reference identifying the problem type." 
                    },
                    ["title"] = new OpenApiSchema 
                    { 
                        Type = "string", 
                        Description = "A short summary of the problem type." 
                    },
                    ["status"] = new OpenApiSchema
                    {
                        Type = "integer",
                        Format = "int32",
                        Description = "The HTTP status code generated by the origin server."
                    },
                    ["detail"] = new OpenApiSchema
                    {
                        Type = "string",
                        Description = "A human-readable explanation specific to this occurrence."
                    },
                    ["instance"] = new OpenApiSchema
                    {
                        Type = "string",
                        Description = "A URI reference identifying the specific occurrence of the problem."
                    }
                };
                schema.Required = new HashSet<string> { "type", "title", "status" };
                schema.AdditionalPropertiesAllowed = false;
            }
            else if (context.Type == typeof(HttpValidationProblemDetails))
            {
                schema.Type = "object";
                schema.Description = "An RFC-9457 problem details object containing validation errors.";
                schema.Properties = new Dictionary<string, OpenApiSchema>
                {
                    ["type"] = new OpenApiSchema
                    {
                        Type = "string",
                        Description = "A URI reference identifying the problem type."
                    },
                    ["title"] = new OpenApiSchema
                    {
                        Type = "string",
                        Description = "A short summary of the problem type."
                    },
                    ["status"] = new OpenApiSchema
                    {
                        Type = "integer",
                        Format = "int32",
                        Description = "The HTTP status code generated by the origin server."
                    },
                    ["detail"] = new OpenApiSchema
                    {
                        Type = "string",
                        Description = "A human-readable explanation specific to this occurrence."
                    },
                    ["instance"] = new OpenApiSchema
                    {
                        Type = "string",
                        Description = "A URI reference identifying the specific occurrence of the problem."
                    },
                    ["errors"] = new OpenApiSchema
                    {
                        Type = "object",
                        AdditionalProperties = new OpenApiSchema 
                        { 
                            Type = "array", 
                            Items = new OpenApiSchema { 
                                Type = "string" 
                            } 
                        },
                        Description = "A dictionary of validation errors, where keys are property names and values are arrays of error messages."
                    }
                };
                schema.Required = new HashSet<string> { "type", "title", "status" };
                schema.AdditionalPropertiesAllowed = false;
            }
        }
    }
}
